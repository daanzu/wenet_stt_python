name: Build

on:
  push:
    branches: [ build ]
  pull_request:
    branches: [ build ]
  workflow_dispatch:
    # gh api repos/:owner/:repo/actions/workflows/build.yml/dispatches -F ref=main

jobs:

  build-linux:
    runs-on: ubuntu-20.04
    if: true
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build
        run: |
          building/dockcross-manylinux2014-x64 bash building/build-wheel-dockcross.sh manylinux2014_x86_64
          # cp dist/* wheelhouse/
          ls -al wheelhouse/
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*
      - name: Tests
        run: |
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install pytest wheelhouse/*manylinux*
          pushd tests/
          python3 -m wenet_stt download gigaspeech_20210728_u2pp_conformer
          ln -s gigaspeech_20210728_u2pp_conformer model
          popd
          pytest tests/
          pytest tests/ -m download

  build-windows:
    runs-on: windows-2019
    if: true
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Build
        run: |
          python3 -m pip install -r requirements-build.txt
          python3 setup.py bdist_wheel
          ls -al dist/
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*
      - name: Tests
        run: |
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install pytest dist/*win*
          pushd tests/
          python3 -m wenet_stt download gigaspeech_20210728_u2pp_conformer
          ln -s gigaspeech_20210728_u2pp_conformer model
          popd
          pytest tests/
          pytest tests/ -m download

  build-macos:
    runs-on: macos-10.15
    if: true
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.9
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Dependencies
        run: |
          python3 -m pip install --upgrade -r requirements-build.txt
          python3 -m pip install --upgrade delocate
          brew install automake
          brew install autoconf
          brew install libtool
      - run: |
          python3 setup.py bdist_wheel
          ls -al dist/
          find . -type f -name "*.dylib"
          export DYLD_FALLBACK_LIBRARY_PATH="./native/wenet/runtime/server/x86/fc_base/libtorch-src/lib"
          delocate-listdeps --depending dist/*macos*
          delocate-wheel -v dist/*macos*
          delocate-listdeps --depending dist/*macos*
          ls -al dist/
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*
      - name: Tests
        run: |
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install pytest dist/*macos*
          pushd tests/
          python3 -m wenet_stt download gigaspeech_20210728_u2pp_conformer
          ln -s gigaspeech_20210728_u2pp_conformer model
          popd
          pytest tests/
          pytest tests/ -m download
